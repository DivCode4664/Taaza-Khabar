# name: Check Unit Tests in Pull Request

# on:
#   pull_request:
#     types:
#       - opened
#       - synchronize

# jobs:
#   check-tests:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Pull Request Branch
#         uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.pull_request.head.ref }}

#       - name: List Test Files
#         id: list_test_files
#         run: |
#           # List test files using a pattern that matches your test file naming conventions
#           TEST_FILES=$(find . -type f -name '*Test*' -o -name '*Spec*')

#           # Set the output variable for later steps
#           echo "::set-output name=test_files::${TEST_FILES}"

#       - name: Check for Test Files
#         run: |
#           # Retrieve the list of test files from the previous step
#           TEST_FILES="${{ steps.list_test_files.outputs.test_files }}"

#           # Check if any test files are present
#           if [ -n "$TEST_FILES" ]; then
#             echo "Test files exist!"
#           else
#             echo "Error: Pull request must include at least one test file."
#             exit 1
#           fi

name: List Staged Files

on:
  push:
    branches:
      - main # Adjust the branch as needed

jobs:
  list-staged-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: List Staged Files
        run: |
          # # List all staged files
          # STAGED_FILES=$(git diff --name-only ${{ github.base_ref }} ${{ github.sha }})
          # if echo "$STAGED_FILES"; then
          #   echo "files exist!"
          # else
          #   echo "not exist"
          # fi

          staged_files=$(git diff --name-only --cached > staged_files.txt)
          if [ -n "$staged_files" ]; then
            echo "Staged Files:"
            echo "$staged_files"
          else
            echo "No files staged."
          fi
