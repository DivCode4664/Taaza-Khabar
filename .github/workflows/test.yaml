name: Check Files in Testing Branch

on:
  pull_request:
    branches:
      - testing

jobs:
  check-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: List Changed Files
        id: list_files
        run: |
          # Determine the point where the main and testing branches diverged
          DIVERGENCE_COMMIT=$(git merge-base HEAD ${{ github.event.before }})

          # List the changed files since the divergence point
          CHANGED_FILES=$(git diff --name-only $DIVERGENCE_COMMIT)

          # Set the output variable for later steps
          echo "::set-output name=files::${CHANGED_FILES}"

      - name: Check Files in Testing Branch
        run: |
          # Retrieve the list of changed files from the previous step
          CHANGED_FILES="${{ steps.list_files.outputs.files }}"

          # Check if any specific conditions are met
          # For example, you can use grep to filter files based on a pattern
          if echo "$CHANGED_FILES" | grep -q 'pattern_to_match'; then
            echo "At least one file matches the specified pattern."
          else
            echo "No files match the specified pattern."
            exit 1  # Exit with an error status if needed
          fi
